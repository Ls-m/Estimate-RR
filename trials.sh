# rm -rf checkpoints/

# #butterworth vs cheby1 vs cheby2 all order 4,(0.1-0.6)?  answer: cheby2 better
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v14" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=4 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v15" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="cheby1" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=4 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v16" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="cheby2" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=4 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False
# rm -rf checkpoints/

# #butterwoth order 4 vs 8? answer: 8 better
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v17" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=4 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v18" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False
# rm -rf checkpoints/

# #butterwoth continue with order 8, high freq 0.6 vs 0.8? low freq 0.1 vs 0.05? answer: 0.1-0.6 better
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v19" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.8 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v20" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.05 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v21" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.05 preprocessing.bandpass_filter.high_freq=0.8 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False



# day 2:

# #butterwoth continue with order 8, high freq 0.6 vs 0.5? low freq 0.1 vs 0.2? answer: 0.2-0.6 better
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v22" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.2 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False preprocessing.remove_outliers=False
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v23" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.5 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False preprocessing.remove_outliers=False

# #continue with butterworth order 8, 0.1-0.6, remove outliers or not? (compare with v18) answer: remove_outliers better
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v24" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=False preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=False preprocessing.remove_outliers=True


# #continue with butterworth order 8, 0.1-0.6, denoiser epda or wavelet? compare with v18 answer: wavelet better, 25 didn't run
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v25" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=True preprocessing.use_edpa=True preprocessing.use_wavelet_denoising=False preprocessing.remove_outliers=True
# rm -rf checkpoints/
# python src/main.py logging.experiment_name="linearOverfit_timeonly_v26" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=True preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=True preprocessing.remove_outliers=True


# day 3: change create_fold

#same as 26 only folds are different
rm -rf checkpoints/
python src/main.py logging.experiment_name="linearOverfit_timeonly_v27" training.model_name="Linear" training.batch_size=32 training.learning_rate=1e-5 training.weight_decay=0 training.scheduler="CosineAnnealingLR" training.max_epochs=1568 training.criterion='L1Loss' training.ablation_mode="time_only" training.time_model_output_dim=512 training.use_ssl_pretraining=False training.dropout=0 training.window_size=60 training.overlap=45 hardware.devices=2 ssl.max_epochs=10 ssl.use_capnobase=False preprocessing.bandpass_filter.type="butter" preprocessing.bandpass_filter.low_freq=0.1 preprocessing.bandpass_filter.high_freq=0.6 preprocessing.bandpass_filter.order=8 preprocessing.use_denoiser=True preprocessing.use_edpa=False preprocessing.use_wavelet_denoising=True preprocessing.remove_outliers=True
